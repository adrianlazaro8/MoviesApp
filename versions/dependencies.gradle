allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    Properties properties = new Properties()
    properties.load(rootProject.file('local.properties').newDataInputStream())
    MOVIE_DB_API_KEY = properties.getProperty('MOVIE_DB_API_KEY')

    // Jetbrains
    kotlin_version = '1.3.61'

    // AndroidX
    gradle_version = '3.5.2'
    androidx_version = '1.1.0'
    recyclerview_version = '1.1.0'
    constraintlayout_version = '1.1.3'

    // Test
    junit_version = '4.13'
    mockito_version = '3.3.1'
    mockitokotlin_version = "2.1.0"
    mockitoinline_version = '3.3.0'

    // Android Core Testing
    archcoretesting_version = '2.1.0'

    // AndroidTest
    androidx_junit_version = "1.1.1"
    testrunner_version = "1.2.0"
    testrules_version = "1.1.0"
    espresso_core_version = "3.2.0"

    // AndroidAnalyzer
    android_analyzer_version = "1.1.1"

    // Dagger
    daggerVersion = '2.24'

    // LifeCycle
    androidarch_lifecycle_version = "1.1.1"

    retrofitVersion = '2.6.3'
    loggingInterceptorVersion = '4.2.1'

    coroutinesVersion = '1.1.0'
    coroutinesAdapterVersion = '0.9.2'

    navigationFragmentVersion = "2.1.0"
    navigationUiVersion = "2.1.0"
    safeargs_version = "2.1.0-rc01"

    glideVersion = "4.9.0"

    servicesLocationVersion = "17.0.0"

    dexterVersion = "5.0.0"

    versionNumbers = [
            compileSdkVersion: 29,
            buildToolsVersion: "29.0.2",
            minSdkVersion    : 21,
            targetSdkVersion : 29
    ]

    jetBrainsDependencies = [
            kotlin: "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    ]

    classpathDependencies = [
            androidToolsBuild       : "com.android.tools.build:gradle:${gradle_version}",
            kotlinGradlePlugin      : "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_version}",
            safeArgs                : "androidx.navigation:navigation-safe-args-gradle-plugin:${safeargs_version}"
    ]

    androidXDependencies = [
            appCompat       : "androidx.appcompat:appcompat:${androidx_version}",
            coreKtx         : "androidx.core:core-ktx:${androidx_version}",
            constraintlayout: "androidx.constraintlayout:constraintlayout:${constraintlayout_version}",
            recyclerview    : "androidx.recyclerview:recyclerview:${recyclerview_version}",
    ]

    testDependencies = [
            jUnit           : "junit:junit:${junit_version}",
            mockitoCore     : "org.mockito:mockito-core:${mockito_version}",
            mokitoInlline   : "org.mockito:mockito-inline:${mockitoinline_version}",
            mockitoKotlin   : "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockitokotlin_version}"
    ]

    androidXTestLibs = [
            androidCoreTesting : "androidx.arch.core:core-testing:${archcoretesting_version}"
    ]

    androidTestDependencies = [
            androidXJUnit: "androidx.test.ext:junit:${androidx_junit_version}",
            testRunner: "androidx.test:runner:${testrunner_version}",
            testRules:  "androidx.test:rules:${testrules_version}",
            espressoCore : "androidx.test.espresso:espresso-core:${espresso_core_version}",
    ]

    androidDependenciesFramework = [
            dagger: "com.google.dagger:dagger:${daggerVersion}",
            servicesLocation: "com.google.android.gms:play-services-location:${servicesLocationVersion}"

    ]

    androidLifecycle = [
            androidLifecycle: "android.arch.lifecycle:extensions:$androidarch_lifecycle_version"
    ]

    androidKaptLibs = [
            daggerCompiler: "com.google.dagger:dagger-compiler:${daggerVersion}",
            roomCompiler  : 'androidx.room:room-compiler:2.2.1'
    ]

    retrofitDependencies = [
            retrofit             : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofitConverterGson: "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    ]

    loggingInterceptorDependencies = [
            loggingInterceptor: "com.squareup.okhttp3:logging-interceptor:${loggingInterceptorVersion}",
    ]

    coroutinesDependencies = [
            coroutines: "org.jetbrains.kotlinx:kotlinx-coroutines-android:${coroutinesVersion}"
    ]

    coroutinesAdapterDependencies = [
            coroutines: "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:${coroutinesAdapterVersion}"
    ]

    navigationDepdendencies = [
            navigationFragment: "androidx.navigation:navigation-fragment-ktx:${navigationFragmentVersion}",
            navigationUi      : "androidx.navigation:navigation-ui-ktx:${navigationUiVersion}",
    ]

    roomDependencies = [
            navigationRoomRuntime: 'androidx.room:room-runtime:2.2.3',
            room                 : "androidx.room:room-ktx:2.2.3"
    ]

    glideDependencies = [
            glide: "com.github.bumptech.glide:glide:${glideVersion}",
    ]

    glideCompilerDependencies = [
            glide: "com.github.bumptech.glide:compiler:${glideVersion}"
    ]

    dexterDependencies = [
            dexter : "com.karumi:dexter:${dexterVersion}"
    ]
}